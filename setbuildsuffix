#!/bin/csh -f
if("$1" == "") then
	echo "Specify suffix"
	exit 1
endif
setenv BUILDSUFFIX "$1"
shift
setenv SDKCONFIG "sdkconfig"
if("$1" != "") setenv SDKCONFIG "$1"

if(! -e "$SDKCONFIG") then
	echo "Missing $SDKCONFIG"
	exit 0
endif

# The variants are per silicon, e.g. 8266, ESP32, ESP32S1, ESP32S2, ESP32S3, ESP32C3, ESP32H2 can all have different options

set add=()
set rem=()
set part=""
set sign=""

if(-e settings.def || -e main/settings.def) then
	set rem=($rem CONFIG_REVK_OLD_SETTINGS);
endif

if(-e release/beta || -e betarelease) then
	set add=($rem CONFIG_REVK_WEB_BETA);
else
	set rem=($rem CONFIG_REVK_WEB_BETA);
endif

if(-e managed_components/espressif__led_strip) then
	set add=($add CONFIG_REVK_LED_STRIP);
else
	set rem=($rem CONFIG_REVK_LED_STRIP);
endif

if("$BUILDSUFFIX" =~ *-8266*) then
	grep -q CONFIG_IDF_TARGET_ESP8266=y "$SDKCONFIG"
	if($status) then
		echo You need to manually set ESP8266 build environment
		exit 1
	endif
else
	grep -q CONFIG_IDF_TARGET_ESP8266=y "$SDKCONFIG"
	if(! $status) then
		echo This build environment is for ESP8266, change to ESP32 based
		exit 1
	endif
endif

if("$BUILDSUFFIX" =~ *-8266*) then
    if("$BUILDSUFFIX" =~ *-4M*) then
		set add=($add CONFIG_ESPTOOLPY_FLASHSIZE_4MB CONFIG_PARTITION_TABLE_CUSTOM)
		set rem=($rem CONFIG_ESPTOOLPY_FLASHSIZE_8MB)
		set part="components/ESP32-RevK/partitions_4m-8266.csv"
	else
		set add=($add CONFIG_ESPTOOLPY_FLASHSIZE_8MB CONFIG_PARTITION_TABLE_CUSTOM)
		set rem=($rem CONFIG_ESPTOOLPY_FLASHSIZE_4MB)
		set part="components/ESP32-RevK/partitions_8m-8266.csv"
	endif
endif

if("$BUILDSUFFIX" =~ *-S1*) then
	grep -q CONFIG_IDF_TARGET_ESP32=y "$SDKCONFIG"
	if($status) then
		idf.py set-target esp32
		setenv CHANGED	1
	endif

	set add=($add CONFIG_SECURE_SIGNED_APPS_NO_SECURE_BOOT CONFIG_SECURE_SIGNED_APPS_ECDSA_SCHEME)
	set rem=($rem CONFIG_SECURE_SIGNED_APPS_RSA_SCHEME);
	set sign="secure_boot_signing_key_ecdsa.pem"

	# The settings PICO/D4/SOLO impact flash and PSRAM

	if("$BUILDSUFFIX" =~ *-PICO*) then
		set add=($add CONFIG_ESP32_SPIRAM_SUPPORT CONFIG_ESPTOOLPY_FLASHSIZE_8MB CONFIG_SPIRAM CONFIG_REVK_PICO CONFIG_PARTITION_TABLE_CUSTOM)
		set rem=($rem CONFIG_ESPTOOLPY_FLASHSIZE_4MB CONFIG_FREERTOS_UNICORE CONFIG_REVK_D4)
		set part="components/ESP32-RevK/partitions_8m.csv"
	else if("$BUILDSUFFIX" =~ *-D4*) then
		set add=($add CONFIG_ESPTOOLPY_FLASHSIZE_4MB CONFIG_FREERTOS_UNICORE CONFIG_REVK_D4 CONFIG_PARTITION_TABLE_CUSTOM)
		set rem=($rem CONFIG_ESP32_SPIRAM_SUPPORT CONFIG_ESPTOOLPY_FLASHSIZE_8MB CONFIG_SPIRAM CONFIG_REVK_PICO)
		set part="components/ESP32-RevK/partitions_4m.csv"
	else if("$BUILDSUFFIX" =~ *-SOLO*) then
		set add=($add CONFIG_ESPTOOLPY_FLASHSIZE_4MB CONFIG_FREERTOS_UNICORE CONFIG_PARTITION_TABLE_CUSTOM)
		set rem=($rem CONFIG_ESP32_SPIRAM_SUPPORT CONFIG_ESPTOOLPY_FLASHSIZE_8MB CONFIG_SPIRAM CONFIG_REVK_PICO CONFIG_REVK_D4)
		set part="components/ESP32-RevK/partitions_4m.csv"
	else
		set add=($add CONFIG_ESPTOOLPY_FLASHSIZE_4MB CONFIG_PARTITION_TABLE_CUSTOM)
		set rem=($rem CONFIG_ESP32_SPIRAM_SUPPORT CONFIG_ESPTOOLPY_FLASHSIZE_8MB CONFIG_FREERTOS_UNICORE CONFIG_SPIRAM CONFIG_REVK_PICO CONFIG_REVK_D4)
		set part="components/ESP32-RevK/partitions_4m.csv"
	endif
	
	if("$BUILDSUFFIX" =~ *-V3*) then
		set add=($add CONFIG_ESP32_REV_MIN_3)
		set rem=($rem CONFIG_ESP32_REV_MIN_2 CONFIG_ESP32_REV_MIN_1 CONFIG_ESP32_REV_MIN_0 CONFIG_ESP32_REV_MIN_1_1 CONFIG_ESP32_REV_MIN_3_1)
	else if("$BUILDSUFFIX" =~ *-V2*) then
		set add=($add CONFIG_ESP32_REV_MIN_2)
		set rem=($rem CONFIG_ESP32_REV_MIN_3 CONFIG_ESP32_REV_MIN_1 CONFIG_ESP32_REV_MIN_0 CONFIG_ESP32_REV_MIN_1_1 CONFIG_ESP32_REV_MIN_3_1)
	else if("$BUILDSUFFIX" =~ *-V1*) then
		set add=($add CONFIG_ESP32_REV_MIN_1)
		set rem=($rem CONFIG_ESP32_REV_MIN_3 CONFIG_ESP32_REV_MIN_2 CONFIG_ESP32_REV_MIN_0 CONFIG_ESP32_REV_MIN_1_1 CONFIG_ESP32_REV_MIN_3_1)
	else if("$BUILDSUFFIX" =~ *-V0*) then
		set add=($add CONFIG_ESP32_REV_MIN_0)
		set rem=($rem CONFIG_ESP32_REV_MIN_3 CONFIG_ESP32_REV_MIN_2 CONFIG_ESP32_REV_MIN_1 CONFIG_ESP32_REV_MIN_1_1 CONFIG_ESP32_REV_MIN_3_1)
	else 	# Default is V3
		set add=($add CONFIG_ESP32_REV_MIN_3)
		set rem=($rem CONFIG_ESP32_REV_MIN_2 CONFIG_ESP32_REV_MIN_1 CONFIG_ESP32_REV_MIN_0 CONFIG_ESP32_REV_MIN_1_1 CONFIG_ESP32_REV_MIN_3_1)
	endif
endif

if("$BUILDSUFFIX" =~ *-S2*) then
	grep -q CONFIG_IDF_TARGET_ESP32S2=y "$SDKCONFIG"
	if($status) then
		idf.py set-target esp32s2
		setenv CHANGED	1
	endif

endif

if("$BUILDSUFFIX" =~ *-S3*) then
	grep -q CONFIG_IDF_TARGET_ESP32S3=y "$SDKCONFIG"
	if($status) then
		idf.py set-target esp32s3
		setenv CHANGED	1
	endif

	set add=($add CONFIG_SECURE_SIGNED_APPS_NO_SECURE_BOOT)
	set sign="secure_boot_signing_key_rsa.pem"

	if("$BUILDSUFFIX" =~ *-V2*) then
		set add=($add CONFIG_ESP32S3_REV_MIN_2)
		set rem=($rem CONFIG_ESP32S3_REV_MIN_3 CONFIG_ESP32S3_REV_MIN_1 CONFIG_ESP32S3_REV_MIN_0 CONFIG_ESP32S3_REV_MIN_1_1 CONFIG_ESP32S3_REV_MIN_3_1)
	else if("$BUILDSUFFIX" =~ *-V1*) then
		set add=($add CONFIG_ESP32S3_REV_MIN_1)
		set rem=($rem CONFIG_ESP32S3_REV_MIN_3 CONFIG_ESP32S3_REV_MIN_2 CONFIG_ESP32S3_REV_MIN_0 CONFIG_ESP32S3_REV_MIN_1_1 CONFIG_ESP32S3_REV_MIN_3_1)
	else 	# Default is V0
		set add=($add CONFIG_ESP32S3_REV_MIN_0)
		set rem=($rem CONFIG_ESP32S3_REV_MIN_3 CONFIG_ESP32S3_REV_MIN_2 CONFIG_ESP32S3_REV_MIN_1 CONFIG_ESP32S3_REV_MIN_1_1 CONFIG_ESP32S3_REV_MIN_3_1)
	endif

	if("$BUILDSUFFIX" =~ *-MINI*) then
		set add=($add CONFIG_REVK_MINI)
	else
		set rem=($rem CONFIG_REVK_MINI)
	endif

	if("$BUILDSUFFIX" =~ *-N4*) then
		set add=($add CONFIG_ESPTOOLPY_FLASHSIZE_4MB CONFIG_PARTITION_TABLE_CUSTOM)
		set rem=($rem CONFIG_ESPTOOLPY_FLASHSIZE_8MB CONFIG_FREERTOS_UNICORE)
		set part="components/ESP32-RevK/partitions_4m.csv"
	else if("$BUILDSUFFIX" =~ *-N8*) then
		set add=($add CONFIG_ESPTOOLPY_FLASHSIZE_8MB CONFIG_PARTITION_TABLE_CUSTOM)
		set rem=($rem CONFIG_ESPTOOLPY_FLASHSIZE_4MB CONFIG_FREERTOS_UNICORE)
		set part="components/ESP32-RevK/partitions_8m.csv"
	endif

	if("$BUILDSUFFIX" =~ *-R2*) then
		set add=($add CONFIG_ESP32S3_SPIRAM_SUPPORT CONFIG_SPIRAM CONFIG_SPIRAM_SPEED_80M)
	else
		set rem=($rem CONFIG_ESP32S3_SPIRAM_SUPPORT CONFIG_SPIRAM)
	endif
endif

if("$BUILDSUFFIX" =~ *-C3*) then
	grep -q CONFIG_IDF_TARGET_ESP32C3=y "$SDKCONFIG"
	if($status) then
		idf.py set-target esp32c3
		setenv CHANGED	1
	endif

endif

if("$BUILDSUFFIX" =~ *-H2*) then
	grep -q CONFIG_IDF_TARGET_ESP32H2=y "$SDKCONFIG"
	if($status) then
		idf.py set-target esp32h2
		setenv CHANGED	1
	endif

endif

if("$BUILDSUFFIX" =~ *-MT*) then
	grep -q CONFIG_REVK_MATTER=y "$SDKCONFIG"
	if($status) then
		set add=($add CONFIG_REVK_MATTER)
		setenv CHANGED	1
	endif
else
	grep -q CONFIG_REVK_MATTER=y "$SDKCONFIG"
	if(! $status) then
		set rem=($rem CONFIG_REVK_MATTER)
		setenv CHANGED	1
	endif
endif

set bs=(`grep _BUILD_SUFFIX_ sdkconfig | sed 's/.*\(CONFIG_[A-Z0-9_]*_BUILD_SUFFIX_[A-Z0-9]*\).*/\1/'`)
foreach c ($bs)
	echo -n "$BUILDSUFFIX" | grep -q -- "-"`echo -n "$c" | sed 's/CONFIG_.*_BUILD_SUFFIX_\(.*\)/\1/'`
	if(! $status) then
		set add=($add $c)
		setenv CHANGED	1
	else
		set rem=($rem $c)
		setenv CHANGED	1
	endif
end

echo "$add" | grep -q CONFIG_SPIRAM
if(! $status) then
	set add=($add CONFIG_BT_NIMBLE_MEM_ALLOC_MODE_EXTERNAL)
	set rem=($rem CONFIG_BT_NIMBLE_MEM_ALLOC_MODE_INTERNAL CONFIG_BT_NIMBLE_MEM_ALLOC_MODE_DEFAULT)
else
	set add=($add CONFIG_BT_NIMBLE_MEM_ALLOC_MODE_DEFAULT)
	set rem=($rem CONFIG_BT_NIMBLE_MEM_ALLOC_MODE_EXTERNAL CONFIG_BT_NIMBLE_MEM_ALLOC_MODE_INTERNAL)
endif

rm -f "$SDKCONFIG".new
foreach c ($add)
	grep -q "^# $c is not set" "$SDKCONFIG"
	if(! $status) then
		sed "s/^# $c is not set/$c=y/" "$SDKCONFIG" > "$SDKCONFIG.new"
		mv -f "$SDKCONFIG".new "$SDKCONFIG"
		setenv CHANGED	1
	endif
end
foreach c ($rem)
	grep -q "^$c=y" "$SDKCONFIG"
	if(! $status) then
		sed "s/^$c=y/# $c is not set/" "$SDKCONFIG" > "$SDKCONFIG.new"
		mv -f "$SDKCONFIG".new "$SDKCONFIG"
		setenv CHANGED	1
	endif
end
if($part != "") then
	foreach t (CONFIG_PARTITION_TABLE_CUSTOM_FILENAME CONFIG_PARTITION_TABLE_FILENAME)
		grep -q "^$t="'"'"$part"'"' "$SDKCONFIG"
        	if($status) then
			sed "s:^$t.*:$t="'"'"$part"'"'":" "$SDKCONFIG" > "$SDKCONFIG.new"
                	mv -f "$SDKCONFIG".new "$SDKCONFIG"
		setenv CHANGED	1
		endif
	end
endif

if($?CHANGED) then
	idf.py reconfigure
	foreach c ($add)
		grep -q "^# $c is not set" "$SDKCONFIG"
		if(! $status) then
			sed "s/^# $c is not set/$c=y/" "$SDKCONFIG" > "$SDKCONFIG.new"
			mv -f "$SDKCONFIG".new "$SDKCONFIG"
		endif
	end
	foreach c ($rem)
		grep -q "^$c=y" "$SDKCONFIG"
		if(! $status) then
			sed "s/^$c=y/# $c is not set/" "$SDKCONFIG" > "$SDKCONFIG.new"
			mv -f "$SDKCONFIG".new "$SDKCONFIG"
		endif
	end
	if($part != "") then
		foreach t (CONFIG_PARTITION_TABLE_CUSTOM_FILENAME CONFIG_PARTITION_TABLE_FILENAME)
			grep -q "^$t="'"'"$part"'"' "$SDKCONFIG"
        		if($status) then
				sed "s:^$t.*:$t="'"'"$part"'"'":" "$SDKCONFIG" > "$SDKCONFIG.new"
                		mv -f "$SDKCONFIG".new "$SDKCONFIG"
			endif
		end
	endif
endif


if($sign != "") then
		grep -q "^CONFIG_SECURE_BOOT_SIGNING_KEY="'"'"$sign"'"' "$SDKCONFIG"
		if($status) then
			sed "s:^CONFIG_SECURE_BOOT_SIGNING_KEY.*:CONFIG_SECURE_BOOT_SIGNING_KEY="'"'"$sign"'"'":" "$SDKCONFIG" > "$SDKCONFIG.new"
                	mv -f "$SDKCONFIG".new "$SDKCONFIG"
		endif
endif
