#ifdef	CONFIG_REVK_SETTINGS_PASSWORD
s	password				.revk .hide .secret	// Settings password<br>(not sent securely so use with care)
#endif
#ifdef  CONFIG_MDNS_MAX_INTERFACES
s	hostname				.revk .hide			// Hostname[.local]<br>(used in DHCP and MQTT)
#else
s	hostname				.revk .hide			// Host name<br>(used in DHCP and MQTT)
#endif
// Appname is not something you should changing usually so leave as MQTT only
s	appname		CONFIG_REVK_APPNAME	.revk .hide		// Application name

s	ota.host	CONFIG_REVK_OTAHOST	.revk	.live		// OTA hostname
u8	ota.days	CONFIG_REVK_OTADAYS	.revk			// OTA auto load (days)
u16	ota.start	600			.revk			// OTA check after startup (min seconds)
bit	ota.auto	1			.revk	.hide .live	// OTA auto upgrade
#ifdef	CONFIG_REVK_WEB_BETA
bit	ota.beta				.revk	.hide .live	// OTA from beta release
#endif
blob	ota.cert	CONFIG_REVK_OTACERT	.revk	.base64	// OTA cert of otahost

bit	dark					.revk .live			// Default LED off

s	ntphost		CONFIG_REVK_NTPHOST	.revk			// NTP host
s	tz		CONFIG_REVK_TZ		.revk	.hide		// Timezone (<a href='https://gist.github.com/alwynallan/24d96091655391107939' target=_blank>info</a>)
u32	watchdogtime	CONFIG_REVK_WATCHDOG	.revk			// Watchdog (seconds)
#ifdef  CONFIG_IDF_TARGET_ESP32S3
u16	usbuptime	CONFIG_REVK_USBUPTIME	.revk			// USB  turns off after this many seconds
#endif
#ifdef  CONFIG_IDF_TARGET_ESP32S3
gpio	factorygpio	-21			.revk			// Factory reset GPIO (press 3 times)
#else
gpio	factorygpio				.revk			// Factory reset GPIO (press 3 times)
#endif

s	topic.group				.revk .array=2	// MQTT Alternative hostname accepted for commands
s	topic.command	command			.revk .old="prefixcommand"			// MQTT Topic for commands 
s	topic.setting	setting			.revk .old="prefixsetting"			// MQTT Topic for settings
s	topic.state	state			.revk .old="prefixstate"			// MQTT Topic for state
s	topic.event	event			.revk .old="prefixevent"			// MQTT Topic for event
s	topic.info	info			.revk .old="prefixinfo"			// MQTT Topic for info
s	topic.error	error			.revk .old="prefixerror"			// MQTT Topic for error
s	topic.ha	homeassistant		.revk						// MQTT Topic for homeassistant
bit	prefix.app	CONFIG_REVK_PREFIXAPP	.revk			// MQTT use appname/ in front of hostname in topic
bit	prefix.host	CONFIG_REVK_PREFIXHOST	.revk			// MQTT use (appname/)hostname/topic instead of topic/(appname/)hostname
#ifdef	CONFIG_REVK_BLINK_DEF
#ifdef	CONFIG_REVK_BLINK_WS2812_DEF
gpio	blink		CONFIG_REVK_BLINK	.revk			// WS2812 LED
#else
gpio	blink		CONFIG_REVK_BLINK	.revk	.array=3	// R, G, B LED array (set all the same for WS2812 LED)
#endif
#endif

#ifdef  CONFIG_REVK_APMODE
#ifdef	CONFIG_REVK_APCONFIG
u16	ap.port		CONFIG_REVK_APPORT	.revk			// TCP port for config web pages on AP
#endif
u32	ap.time		CONFIG_REVK_APTIME	.revk			// Limit AP to time (seconds)
u32	ap.wait		CONFIG_REVK_APWAIT	.revk			// Wait off line before starting AP (seconds)
gpio	ap.gpio		CONFIG_REVK_APGPIO	.revk			// Start AP on GPIO
#endif


#ifdef  CONFIG_REVK_MQTT
s	mqtt.host	CONFIG_REVK_MQTTHOST	.revk	.array=CONFIG_REVK_MQTT_CLIENTS .hide			// MQTT hostname
u16	mqtt.port	CONFIG_REVK_MQTTPORT	.revk	.array=CONFIG_REVK_MQTT_CLIENTS				// MQTT port
s	mqtt.user	CONFIG_REVK_MQTTUSER	.revk	.array=CONFIG_REVK_MQTT_CLIENTS .hide			// MQTT username
s	mqtt.pass	CONFIG_REVK_MQTTPASS	.revk	.array=CONFIG_REVK_MQTT_CLIENTS	.secret .hide		// MQTT password
blob	mqtt.cert	CONFIG_REVK_MQTTCERT	.revk	.array=CONFIG_REVK_MQTT_CLIENTS	.base64 		// MQTT CA certificate (for mqtts)
#endif  
blob	client.key				.revk	.base64 	// Client Key (OTA and MQTT TLS)
blob	client.cert				.revk	.base64 	// Client certificate (OTA and MQTT TLS)


#if     defined(CONFIG_REVK_WIFI) || defined(CONFIG_REVK_MESH)
u16	wifi.reset	CONFIG_REVK_WIFIRESET	.revk 			// Restart if WiFi off for this long (seconds)
s	wifi.ssid	CONFIG_REVK_WIFISSID	.revk	.hide		// WiFI SSID (name)
s	wifi.pass	CONFIG_REVK_WIFIPASS	.revk	.hide .secret	// WiFi password
s	wifi.ip		CONFIG_REVK_WIFIIP	.revk			// WiFi Fixed IP
s	wifi.gw		CONFIG_REVK_WIFIGW	.revk			// WiFi Fixed gateway
s	wifi.dns	CONFIG_REVK_WIFIDNS	.revk	.array=3	// WiFi fixed DNS
o6	wifi.bssid	CONFIG_REVK_WIFIBSSID	.revk	.hex		// WiFI BSSID
u8	wifi.chan	CONFIG_REVK_WIFICHAN	.revk			// WiFI channel
u16	wifi.uptime	CONFIG_REVK_WIFIUPTIME	.revk			// WiFI turns off after this many seconds
bit	wifi.ps		CONFIG_REVK_WIFIPS	.revk			// WiFi power save
bit	wifi.maxps	CONFIG_REVK_WIFIMAXPS	.revk			// WiFi power save (max)
#endif


#ifndef	CONFIG_REVK_MESH
s	ap.ssid		CONFIG_REVK_APSSID	.revk			// AP mode SSID (name)
s	ap.pass		CONFIG_REVK_APPASS	.revk	.secret	// AP mode password
u8	ap.max		CONFIG_REVK_APMAX	.revk	 .hide	// AP max clients
s	ap.ip		CONFIG_REVK_APIP	.revk			// AP mode block
bit	ap.lr		CONFIG_REVK_APLR	.revk			// AP LR mode
bit	ap.hide		CONFIG_REVK_APHIDE	.revk			// AP hide SSID
#endif


#ifdef	CONFIG_REVK_MESH
//  Not something you should changing usually so leave as MQTT only
s	nodename				.revk .hide				// Mesh node name
u16	mesh.reset	CONFIG_REVK_MESHRESET	.revk .hide				// Reset if mesh off for this long (seconds)
o6	mesh.id		CONFIG_REVK_MESHID	.revk	.hex .hide			// Mesh ID (hex)
o16	mesh.key				.revk	.secret	.hex .hide	// Mesh key
u16	mesh.width	CONFIG_REVK_MESHWIDTH	.revk .hide				// Mesh width
u16	mesh.depth	CONFIG_REVK_MESHDEPTH	.revk .hide				// Mesh depth
u16	mesh.max	CONFIG_REVK_MESHMAX	.revk .hide				// Mesh max devices
s	mesh.pass	CONFIG_REVK_MESHPASS	.revk	.secret .hide		// Mesh AP password
bit	mesh.lr		CONFIG_REVK_MESHLR	.revk .hide				// Mesh use LR mode
bit	mesh.root				.revk .hide				// This is preferred mesh root
#endif
