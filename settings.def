#ifdef	CONFIG_REVK_SETTINGS_PASSWORD
s	password				.revk=1	.hide=1 .secret=1	// Settings password (this is not sent securely so use with care on local networks you control)
#endif
s	hostname				.revk=1 .hide=1			// Host name
// Appname is not something you should changing usually so leave as MQTT only
s	appname		CONFIG_REVK_APPNAME	.revk=1 .hide=1		// Application name

s	ota.host	CONFIG_REVK_OTAHOST	.revk=1	.live=1		// OTA hostname
u8	ota.days	CONFIG_REVK_OTADAYS	.revk=1			// OTA auto load (days)
u16	ota.start	600			.revk=1			// OTA check after startup (min seconds)
bit	ota.auto	1			.revk=1	.hide=1 .live=1	// OTA auto upgrade
#ifdef	CONFIG_REVK_WEB_BETA
bit	ota.beta				.revk=1	.hide=1 .live=1	// OTA from beta release
#endif
blob	ota.cert	CONFIG_REVK_OTACERT	.revk=1	.base64=1	// OTA cert of otahost
s	ntphost		CONFIG_REVK_NTPHOST	.revk=1			// NTP host
s	tz		CONFIG_REVK_TZ		.revk=1	.hide=1		// Timezone (<a href='https://gist.github.com/alwynallan/24d96091655391107939' target=_blank>info</a>)
u32	watchdogtime	CONFIG_REVK_WATCHDOG	.revk=1			// Watchdog (seconds)
s	topic.group				.revk=1 .array=2	// MQTT Alternative hostname accepted for commands
s	topic.command	command			.revk=1 .old="prefixcommand"			// MQTT Topic for commands 
s	topic.setting	setting			.revk=1 .old="prefixsetting"			// MQTT Topic for settings
s	topic.state	state			.revk=1 .old="prefixstate"			// MQTT Topic for state
s	topic.event	event			.revk=1 .old="prefixevent"			// MQTT Topic for event
s	topic.info	info			.revk=1 .old="prefixinfo"			// MQTT Topic for info
s	topic.error	error			.revk=1 .old="prefixerror"			// MQTT Topic for error
s	topic.ha	homeassistant		.revk=1						// MQTT Topic for homeassistant
bit	prefix.app	CONFIG_REVK_PREFIXAPP	.revk=1			// MQTT use appname/ in front of hostname in topic
bit	prefix.host	CONFIG_REVK_PREFIXHOST	.revk=1			// MQTT use (appname/)hostname/topic instead of topic/(appname/)hostname
#ifdef	CONFIG_REVK_BLINK_DEF
gpio	blink		CONFIG_REVK_BLINK	.revk=1	.array=3	// R, G, B LED array (set all the same for WS2812 LED)
#endif

bit	dark					.revk=1 .live=1			// Default LED off
#ifdef  CONFIG_IDF_TARGET_ESP32S3
gpio	factorygpio	-21			.revk=1			// Factory reset GPIO (press 3 times)
#else
gpio	factorygpio				.revk=1			// Factory reset GPIO (press 3 times)
#endif


#ifdef  CONFIG_REVK_APMODE
#ifdef	CONFIG_REVK_APCONFIG
u16	ap.port		CONFIG_REVK_APPORT	.revk=1			// TCP port for config web pages on AP
#endif
u32	ap.time		CONFIG_REVK_APTIME	.revk=1			// Limit AP to time (seconds)
u32	ap.wait		CONFIG_REVK_APWAIT	.revk=1			// Wait off line before starting AP (seconds)
gpio	ap.gpio		CONFIG_REVK_APGPIO	.revk=1			// Start AP on GPIO
#endif


#ifdef  CONFIG_REVK_MQTT
s	mqtt.host	CONFIG_REVK_MQTTHOST	.revk=1	.array=CONFIG_REVK_MQTT_CLIENTS .hide=1			// MQTT hostname
u16	mqtt.port	CONFIG_REVK_MQTTPORT	.revk=1	.array=CONFIG_REVK_MQTT_CLIENTS .hide=1			// MQTT port
s	mqtt.user	CONFIG_REVK_MQTTUSER	.revk=1 .array=CONFIG_REVK_MQTT_CLIENTS .hide=1			// MQTT username
s	mqtt.pass	CONFIG_REVK_MQTTPASS	.revk=1	.array=CONFIG_REVK_MQTT_CLIENTS	.secret=1 .hide=1	// MQTT password
blob	mqtt.cert	CONFIG_REVK_MQTTCERT	.revk=1	.array=CONFIG_REVK_MQTT_CLIENTS	.base64=1 		// MQTT CA certificate
#endif  
blob	client.key				.revk=1	.base64=1 	// Client Key (OTA and MQTT TLS)
blob	client.cert				.revk=1	.base64=1 	// Client certificate (OTA and MQTT TLS)


#if     defined(CONFIG_REVK_WIFI) || defined(CONFIG_REVK_MESH)
u16	wifi.reset	CONFIG_REVK_WIFIRESET	.revk=1 .hide=1		// Restart if WiFi off for this long (seconds)
s	wifi.ssid	CONFIG_REVK_WIFISSID	.revk=1	.hide=1		// WiFI SSID (name)
s	wifi.pass	CONFIG_REVK_WIFIPASS	.revk=1	.hide=1 .secret=1	// WiFi password
s	wifi.ip		CONFIG_REVK_WIFIIP	.revk=1			// WiFi Fixed IP
s	wifi.gw		CONFIG_REVK_WIFIGW	.revk=1			// WiFi Fixed gateway
s	wifi.dns	CONFIG_REVK_WIFIDNS	.revk=1	.array=3	// WiFi fixed DNS
o6	wifi.bssid	CONFIG_REVK_WIFIBSSID	.revk=1	.hex=1		// WiFI BSSID
u8	wifi.chan	CONFIG_REVK_WIFICHAN	.revk=1			// WiFI channel
u16	wifi.uptime	CONFIG_REVK_WIFIUPTIME	.revk=1			// WiFI turns off after this many seconds
bit	wifi.ps		CONFIG_REVK_WIFIPS	.revk=1			// WiFi power save
bit	wifi.maxps	CONFIG_REVK_WIFIMAXPS	.revk=1			// WiFi power save (max)
#endif


#ifndef	CONFIG_REVK_MESH
s	ap.ssid		CONFIG_REVK_APSSID	.revk=1			// AP mode SSID (name)
s	ap.pass		CONFIG_REVK_APPASS	.revk=1	.secret=1	// AP mode password
u8	ap.max		CONFIG_REVK_APMAX	.revk=1	 .hide=1	// AP max clients
s	ap.ip		CONFIG_REVK_APIP	.revk=1			// AP mode block
bit	ap.lr		CONFIG_REVK_APLR	.revk=1			// AP LR mode
bit	ap.hide		CONFIG_REVK_APHIDE	.revk=1			// AP hide SSID
#endif


#ifdef	CONFIG_REVK_MESH
//  Not something you should changing usually so leave as MQTT only
s	nodename				.revk=1 .hide=1				// Mesh node name
u16	mesh.reset	CONFIG_REVK_MESHRESET	.revk=1 .hide=1				// Reset if mesh off for this long (seconds)
o6	mesh.id		CONFIG_REVK_MESHID	.revk=1	.hex=1 .hide=1			// Mesh ID (hex)
o16	mesh.key				.revk=1	.secret=1	.hex=1 .hide=1	// Mesh key
u16	mesh.width	CONFIG_REVK_MESHWIDTH	.revk=1 .hide=1				// Mesh width
u16	mesh.depth	CONFIG_REVK_MESHDEPTH	.revk=1 .hide=1				// Mesh depth
u16	mesh.max	CONFIG_REVK_MESHMAX	.revk=1 .hide=1				// Mesh max devices
s	mesh.pass	CONFIG_REVK_MESHPASS	.revk=1	.secret=1 .hide=1		// Mesh AP password
bit	mesh.lr		CONFIG_REVK_MESHLR	.revk=1 .hide=1				// Mesh use LR mode
bit	mesh.root				.revk=1 .hide=1				// This is preferred mesh root
#endif
